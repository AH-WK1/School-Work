/******************************************************************************

1.DESCRIPTION-This program takes a point(x and y) and the slope and gives the 
              Point-slope form and Slope-intercept form of it
2.NAME- Kacey Woods
3.DATE- 3/8/20

*******************************************************************************/
#include <iostream>
#include <string>
using namespace std;

class Line{
    
    public:
    //CONSTRUCTOR
    Line(int slope, int x, int y)
    {
        point_slope( slope, x, y );
        point_intercept( slope, x, y );
        cout<<endl;
    }
        void point_slope(int slope, int x, int y)
        {
            int slope_temp=0;
            int newx=0;

            //MATH
            y=y*-1;
            x=x*-1;
            slope_temp=slope;
            newx=slope_temp*x;
            newx=newx-y;
                
            //PRINTING RESULTS
            cout<<"Your Point-slope form is: ";
            if(newx>=0)
                cout<<"y = "<<slope_temp<<"x+"<<newx<<endl;

            else
                cout<<"y = "<<slope_temp<<"x"<<newx<<endl;
        }
        void point_intercept(int slope, int x, int y)
        {
            int mx_result=0;
            int b=0;
            
           //MATH
            mx_result=slope*x;
            b=y-mx_result;
            
            //PRINTING RESULTS
            cout<<"your Point-intercept form is: ";
            if(b>=0)
                cout<<y<<"= "<<slope<<"("<<x<<")+"<<b<<endl<<"b= "<<b<<endl;
            else
                cout<<y<<"= "<<slope<<"("<<x<<")"<<b<<endl<<"b= "<<b<<endl;
        }
    private:
        int slope; 
        int x;
        int y;
};
int main(void)
{
    Line first_line(-2, 4, -3);
    Line second_line(2, -4, 3);
    return 0;
}
